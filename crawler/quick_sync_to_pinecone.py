"""
Quick Sync to Pinecone - Auto setup and sync
T·ª± ƒë·ªông t·∫°o .env v√† sync d·ªØ li·ªáu l√™n Pinecone
"""

import os
import sys
from pathlib import Path
from dotenv import load_dotenv

# Load crawler .env first (c√≥ Supabase credentials)
load_dotenv()

# T·∫°o .env cho rag-service n·∫øu ch∆∞a c√≥
rag_service_dir = Path(__file__).parent.parent / 'backend' / 'rag-service'
env_file = rag_service_dir / '.env'

if not env_file.exists():
    print("üìù Creating .env file for rag-service...")
    
    supabase_url = os.getenv('SUPABASE_URL', '')
    supabase_key = os.getenv('SUPABASE_SERVICE_KEY') or os.getenv('SUPABASE_ANON_KEY', '')
    
    if not supabase_url or not supabase_key:
        print("‚ùå Cannot find Supabase credentials in crawler/.env")
        print("   Please set SUPABASE_URL and SUPABASE_SERVICE_KEY in crawler/.env")
        sys.exit(1)
    
    # L·∫•y Pinecone credentials t·ª´ env ho·∫∑c y√™u c·∫ßu nh·∫≠p
    pinecone_api_key = os.getenv('PINECONE_API_KEY', '')
    pinecone_index = os.getenv('PINECONE_INDEX_NAME', 'law-advisor-mini')
    
    if not pinecone_api_key:
        print("\n‚ö†Ô∏è  Pinecone API Key not found in environment")
        print("   Please enter your Pinecone credentials:")
        print("   (Get it from: https://app.pinecone.io)")
        pinecone_api_key = input("\n   Pinecone API Key: ").strip()
        
        if not pinecone_api_key:
            print("‚ùå Pinecone API Key is required")
            sys.exit(1)
        
        pinecone_index = input(f"   Pinecone Index Name (default: law-advisor-mini): ").strip() or 'law-advisor-mini'
    
    # T·∫°o .env file
    env_content = f"""# Auto-generated by quick_sync_to_pinecone.py

# Supabase Configuration
SUPABASE_URL={supabase_url}
SUPABASE_ANON_KEY={supabase_key}

# Vector Database Configuration
VECTOR_DB_PROVIDER=pinecone

# Pinecone Configuration
PINECONE_API_KEY={pinecone_api_key}
PINECONE_INDEX_NAME={pinecone_index}
PINECONE_ENVIRONMENT=gcp-starter

# Model Configuration
EMBEDDING_MODEL=sentence-transformers/paraphrase-multilingual-mpnet-base-v2

# Service Configuration
PORT=8001
HOST=0.0.0.0
DEBUG=True
"""
    
    env_file.write_text(env_content, encoding='utf-8')
    print(f"‚úÖ Created {env_file}")

# Now run the sync script
print("\n" + "="*70)
print("üöÄ STARTING SYNC TO PINECONE")
print("="*70)

# Import and run sync script
sys.path.insert(0, str(Path(__file__).parent))
from sync_supabase_to_pinecone import main as sync_main

# Patch sys.argv to add auto-confirm
original_argv = sys.argv
sys.argv = [sys.argv[0], '--auto-confirm', '--batch-size', '100']

try:
    sync_main()
except KeyboardInterrupt:
    print("\n\n‚ö†Ô∏è  Interrupted by user")
    sys.exit(1)
except Exception as e:
    print(f"\n‚ùå Error: {e}")
    import traceback
    traceback.print_exc()
    sys.exit(1)
finally:
    sys.argv = original_argv

