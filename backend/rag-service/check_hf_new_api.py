"""
Ki·ªÉm tra serverless models tr√™n HuggingFace
C√≥ th·ªÉ c·∫ßn d√πng Serverless Inference API thay v√¨ Hosted Inference API
"""
import requests
import os
from dotenv import load_dotenv

load_dotenv()

HF_API_TOKEN = os.getenv('HF_API_TOKEN')

print("="*70)
print("KI·ªÇM TRA API HUGGINGFACE M·ªöI NH·∫§T")
print("="*70)

# Th·ª≠ API m·ªõi c·ªßa HuggingFace - Serverless Inference
# Ref: https://huggingface.co/docs/api-inference/

# Test v·ªõi model public nh·ªè
test_models = [
    "openai-community/gpt2",  # Model c≈©, stable
    "gpt2",  # Short name
]

for model in test_models:
    print(f"\n{'‚îÄ'*70}")
    print(f"Model: {model}")
    print(f"{'‚îÄ'*70}")
    
    # Try different API endpoints
    endpoints = [
        f"https://api-inference.huggingface.co/models/{model}",
        f"https://api-inference.huggingface.co/pipeline/text-generation/{model}",
    ]
    
    for endpoint in endpoints:
        print(f"\nTrying: {endpoint}")
        
        try:
            headers = {
                'Authorization': f'Bearer {HF_API_TOKEN}',
            }
            
            payload = {
                'inputs': 'Hello world',
                'options': {'wait_for_model': True}
            }
            
            response = requests.post(endpoint, headers=headers, json=payload, timeout=30)
            
            print(f"  Status: {response.status_code}")
            
            if response.status_code == 200:
                print(f"  ‚úÖ SUCCESS!")
                result = response.json()
                print(f"  Response: {result}")
                print(f"\nüéâ WORKING ENDPOINT FOUND!")
                print(f"  Model: {model}")
                print(f"  Endpoint: {endpoint}")
                exit(0)
            else:
                print(f"  Response: {response.text[:200]}")
                
        except Exception as e:
            print(f"  Error: {str(e)[:100]}")

print("\n" + "="*70)
print("‚ùå KH√îNG T√åM TH·∫§Y API ENDPOINT N√ÄO HO·∫†T ƒê·ªòNG")
print("="*70)
print("\nHuggingFace c√≥ th·ªÉ ƒë√£:")
print("1. Thay ƒë·ªïi c·∫•u tr√∫c API")
print("2. Y√™u c·∫ßu subscription cho Inference API")
print("3. Ng∆∞ng free tier")
print("\nüìù Gi·∫£i ph√°p thay th·∫ø:")
print("‚Ä¢ Groq API (fast, free): https://groq.com")
print("‚Ä¢ Ollama (local, free): https://ollama.com")
print("‚Ä¢ OpenRouter (nhi·ªÅu models): https://openrouter.ai")
